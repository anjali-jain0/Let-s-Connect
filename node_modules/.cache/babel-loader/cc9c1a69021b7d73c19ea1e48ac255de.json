{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anjali\\\\Desktop\\\\AJ\\\\mern_social\\\\src\\\\grpaddmembers.js\";\n//import React, { Component } from 'react';\n// import Autosuggest from 'react-autosuggest';\n// class GrpAddMembers extends Component{\n// \tconstructor(){\n// \t\tsuper();\n// \t\tthis.state = {\n// \t\t\tfollowing:'',\n// \t\t\t// value : '',\n// \t\t\t// suggestions : []\n// \t\t}\n// \t}\n// \tcomponentWillMount = () => {\n// \t\tfetch('/myfollowing/' + this.props.match.params.usrid)\n// \t\t.then(res => res.json())\n//         .then(data => this.setState({following:data}));\n// \t}\n// \tgetSuggestions = value => {\n// \t\tconst inputValue = value.trim().toLowerCase();\n// \t\tconst inputLength = inputValue.length;\n// \t\treturn inputLength === 0 ? [] : this.state.following.filter(person => {\n// \t\t\treturn person.name.toLowerCase().slice(0,inputLength) === inputValue;\n// \t\t});\n// \t}\n// \tonChange = ( newValue) => {\n// \t\tthis.setState({value : newValue});\n// \t}\n//     onSuggestionsFetchRequested = (value) => {\n//     \tthis.setState({suggestions : this.getSuggestions(value)});\n//     }\n//     onSuggestionsClearRequested = () => {\n//     \tthis.setState({suggestions : []});\n//     }\n//     handleRequest = (name,grpid) => {\n//     \tfetch('/grpinvite/' + name + '/' + grpid)\n//     \t.then(res => res.json())\n//     \t.then(data => console.log('invite send'));\n//     }\n// render(){\n// \t\tconst {value , suggestions} = this.state;\n// \t\tconst getSuggestionValue = suggestion => suggestion.name;\n// \t\tconst renderSuggestion = suggestion => (\n// \t\t\t<div>\n// \t\t\t\t{suggestion.name}\n// \t\t\t</div>\n// \t\t);\n// \t\tconst inputProps = {\n// \t\t\tplaceholder : 'Type a name',\n// \t\t\tvalue,\n// \t\t\tonChange: this.onChange\n// \t\t};\n// \t\tif(this.state.following.length!=0){\n// return(\n// <div className='container'>\n// \t<div className=\"input-field\">\n// \t\t<Autosuggest \n// \t\tsuggestions = {suggestions}\n// \t\tonSuggestionsFetchRequested = {this.onSuggestionsFetchRequested}\n// \t\tonSuggestionsClearRequested = {this.onSuggestionsClearRequested}\n// \t\tgetSuggestionValue = {getSuggestionValue}\n// \t\trenderSuggestion = {renderSuggestion}\n// \t\tinputProps = {inputProps}\n// \t\t/>\n// \t</div>\n// \t<button onClick={() => {this.handleRequest(this.state.value,this.props.match.params.grpid)}}> Send Invite</button>\n//    </div>\n// )\n// \t} else {\n// \t\treturn (\n// \t\t\t<div>You need to follow someone to send them a request to join your group.</div>\n// \t\t\t)\n// \t}\n// \t}\n// }\n// export default GrpAddMembers ;\n// //show pic also to differentiate between same name one\nimport React, { Component } from 'react';\n\nvar GrpAddMembers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GrpAddMembers, _Component);\n\n  function GrpAddMembers() {\n    var _this;\n\n    _classCallCheck(this, GrpAddMembers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GrpAddMembers).call(this));\n\n    _this.componentWillMount = function () {\n      fetch('/myfollowing/' + _this.props.match.params.usrid).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this.setState({\n          following: data\n        });\n      });\n    };\n\n    _this.handleRequest = function (id, gid) {\n      fetch('/grpinvite/' + id + '/' + gid).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.state = {\n      following: ''\n    };\n    return _this;\n  }\n\n  _createClass(GrpAddMembers, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.following.length > 0) {\n        var mem = this.state.following && this.state.following.map(function (member) {\n          return React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, member.name), React.createElement(\"button\", {\n            onClick: function onClick() {\n              _this2.handleRequest(member._id, _this2.props.match.params.grpid);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Send Invite\")));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, mem);\n    }\n  }]);\n\n  return GrpAddMembers;\n}(Component);\n\nexport default GrpAddMembers;","map":{"version":3,"sources":["C:\\Users\\Anjali\\Desktop\\AJ\\mern_social\\src\\grpaddmembers.js"],"names":["React","Component","GrpAddMembers","componentWillMount","fetch","props","match","params","usrid","then","res","json","data","setState","following","handleRequest","id","gid","state","length","mem","map","member","name","_id","grpid"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,a;;;;;AACL,2BAAa;AAAA;;AAAA;;AACZ;;AADY,UAObC,kBAPa,GAOQ,YAAM;AAC1BC,MAAAA,KAAK,CAAC,kBAAkB,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,KAA3C,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAEOF,IAFP,CAEY,UAAAG,IAAI;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACC,UAAAA,SAAS,EAACF;AAAX,SAAd,CAAJ;AAAA,OAFhB;AAGA,KAXY;;AAAA,UAabG,aAba,GAaG,UAACC,EAAD,EAAIC,GAAJ,EAAY;AAC3Bb,MAAAA,KAAK,CAAC,gBAAgBY,EAAhB,GAAqB,GAArB,GAA2BC,GAA5B,CAAL,CACCR,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT;AAEA,KAhBY;;AAEZ,UAAKO,KAAL,GAAa;AACZJ,MAAAA,SAAS,EAAC;AADE,KAAb;AAFY;AAKZ;;;;6BAcM;AAAA;;AAEP,UAAG,KAAKI,KAAL,CAAWJ,SAAX,CAAqBK,MAArB,GAA4B,CAA/B,EAAiC;AAChC,YAAIC,GAAG,GAAE,KAAKF,KAAL,CAAWJ,SAAX,IAAwB,KAAKI,KAAL,CAAWJ,SAAX,CAAqBO,GAArB,CAAyB,UAAAC,MAAM,EAAI;AACnE,iBACC;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACgB;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,MAAM,CAACC,IAAX,CADJ,EAEI;AAClB,YAAA,OAAO,EAAE,mBAAM;AAAC,cAAA,MAAI,CAACR,aAAL,CAAmBO,MAAM,CAACE,GAA1B,EAA8B,MAAI,CAACnB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBkB,KAAtD;AAA6D,aAD3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CADhB,CADD;AAWA,SAZgC,CAAjC;AAaA;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEL,GADF,CADF;AAMA;;;;EA5C2BnB,S;;AA+C5B,eAAeC,aAAf","sourcesContent":["//import React, { Component } from 'react';\r\n// import Autosuggest from 'react-autosuggest';\r\n\r\n// class GrpAddMembers extends Component{\r\n// \tconstructor(){\r\n// \t\tsuper();\r\n// \t\tthis.state = {\r\n// \t\t\tfollowing:'',\r\n// \t\t\t// value : '',\r\n// \t\t\t// suggestions : []\r\n// \t\t}\r\n// \t}\r\n\r\n// \tcomponentWillMount = () => {\r\n// \t\tfetch('/myfollowing/' + this.props.match.params.usrid)\r\n// \t\t.then(res => res.json())\r\n//         .then(data => this.setState({following:data}));\r\n// \t}\r\n\r\n// \tgetSuggestions = value => {\r\n// \t\tconst inputValue = value.trim().toLowerCase();\r\n// \t\tconst inputLength = inputValue.length;\r\n// \t\treturn inputLength === 0 ? [] : this.state.following.filter(person => {\r\n// \t\t\treturn person.name.toLowerCase().slice(0,inputLength) === inputValue;\r\n// \t\t});\r\n// \t}\r\n\r\n// \tonChange = ( newValue) => {\r\n// \t\tthis.setState({value : newValue});\r\n// \t}\r\n    \r\n//     onSuggestionsFetchRequested = (value) => {\r\n//     \tthis.setState({suggestions : this.getSuggestions(value)});\r\n//     }\r\n\r\n//     onSuggestionsClearRequested = () => {\r\n//     \tthis.setState({suggestions : []});\r\n//     }\r\n\r\n//     handleRequest = (name,grpid) => {\r\n//     \tfetch('/grpinvite/' + name + '/' + grpid)\r\n//     \t.then(res => res.json())\r\n//     \t.then(data => console.log('invite send'));\r\n//     }\r\n\r\n// render(){\r\n// \t\tconst {value , suggestions} = this.state;\r\n\r\n// \t\tconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\n// \t\tconst renderSuggestion = suggestion => (\r\n// \t\t\t<div>\r\n// \t\t\t\t{suggestion.name}\r\n// \t\t\t</div>\r\n// \t\t);\r\n\r\n// \t\tconst inputProps = {\r\n// \t\t\tplaceholder : 'Type a name',\r\n// \t\t\tvalue,\r\n// \t\t\tonChange: this.onChange\r\n// \t\t};\r\n\r\n// \t\tif(this.state.following.length!=0){\r\n\t\t// return(\r\n\t\t// <div className='container'>\r\n\t\t// \t<div className=\"input-field\">\r\n\t\t// \t\t<Autosuggest \r\n\t\t// \t\tsuggestions = {suggestions}\r\n\t\t// \t\tonSuggestionsFetchRequested = {this.onSuggestionsFetchRequested}\r\n\t\t// \t\tonSuggestionsClearRequested = {this.onSuggestionsClearRequested}\r\n\t\t// \t\tgetSuggestionValue = {getSuggestionValue}\r\n\t\t// \t\trenderSuggestion = {renderSuggestion}\r\n\t\t// \t\tinputProps = {inputProps}\r\n\t\t// \t\t/>\r\n\t\t// \t</div>\r\n\t\t// \t<button onClick={() => {this.handleRequest(this.state.value,this.props.match.params.grpid)}}> Send Invite</button>\r\n\t //    </div>\r\n\t\t// )\r\n\r\n\r\n// \t} else {\r\n// \t\treturn (\r\n// \t\t\t<div>You need to follow someone to send them a request to join your group.</div>\r\n// \t\t\t)\r\n// \t}\r\n// \t}\r\n// }\r\n\r\n// export default GrpAddMembers ;\r\n\r\n// //show pic also to differentiate between same name one\r\n\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass GrpAddMembers extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tfollowing:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount = () => {\r\n\t\tfetch('/myfollowing/' + this.props.match.params.usrid)\r\n\t\t.then(res => res.json())\r\n        .then(data => this.setState({following:data}));\r\n\t}\r\n\r\n\thandleRequest = (id,gid) => {\r\n\t\tfetch('/grpinvite/' + id + '/' + gid)\r\n\t\t.then(res => res.json());\r\n\t}\r\n\r\n\r\nrender(){\r\n\r\n\tif(this.state.following.length>0){\r\n\t\tvar mem=(this.state.following && this.state.following.map(member => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"card\" >\r\n                    <div className=\"card-body\">\r\n                        <p>{member.name}</p>\r\n                        <button \r\n\t\t\t\t\t\tonClick={() => {this.handleRequest(member._id,this.props.match.params.grpid)}}> \r\n\t\t\t\t\t\tSend Invite\r\n\t\t\t\t\t\t</button>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t)\r\n\t\t}))\r\n\t}\r\n\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{mem}\r\n\t\t    </div>\r\n\t\t\t)\r\n\r\n}\r\n}\r\n\r\nexport default GrpAddMembers;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}